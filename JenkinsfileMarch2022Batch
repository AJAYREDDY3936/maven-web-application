def sendSlackNotifications(String buildStatus = 'STARTED') {
 
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

node{

echo "Job Name is:  ${env.JOB_NAME}"
echo "Node name is:  ${env.NODE_NAME}"

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])

def mavenHome = tool name: 'maven3.8.5'

try{

sendSlackNotifications('STARTED')

//Get the code from GithUb Repo
stage('CheckoutCode'){
git branch: 'development', credentialsId: '14bdc22d-7ced-47f5-98a3-7b18bec230a6', url: 'https://github.com/AJAYREDDY3936/maven-web-application.git'
}
//Do the build by using Maven Build tool
stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}
/*
//Execute the SonarQube Report
stage('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}

//Upload Artifacts into Artifactory Repo
stage('UploadArtifactsintoNexus'){
sh "${mavenHome}/bin/mvn deploy"
}

//Deploy Application into Tomcat Server
stage('DeployApplicationIntoTomcatServer'){
sshagent(['a00ec505-a6aa-4dce-87fa-226f488c048e']) {
    sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war" ec2-user@3.110.51.237:/opt/apache-tomcat-9.0.62/webapps/"


}

}
*/
}//Try CLosing
  catch(e){
  currentBuild.result = "FAILED"
  }
  finally{

sendSlackNotifications(currentBuild.result)
}
}//Node Closing
